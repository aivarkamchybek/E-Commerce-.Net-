@model MarketPlaceProject.ViewModels.UserVM

@{
    Layout = null;
}

@{
    ViewBag.Title = "Signup";
}

<a href="@Url.Action("Login", "User")" class="btn-signin">Sign In</a>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register as User</title>
</head>
<body>
    <div class="modal-dialog">
        <link href="~/Content/signup.css" rel="stylesheet" />
        <div class="modal-content register-modal">
            <div class="modal-header">
                <h5 class="modal-title">Register as User</h5>
                <button type="button" class="close" onclick="closeModal()">&times;</button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Signup", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group file-input">
                        <label for="imagePreview" class="image-preview-label">Image Preview</label>
                        <div class="image-preview">
                            <img src="" id="imgPreview" alt="Image Preview">
                        </div>
                        <label for="ProfilePictureFile" class="form-gourp.file-input label">Profile Pic</label>
                        <input type="file" id="ProfilePictureFile" name="ProfilePictureFile" accept="image/*" onchange="loadFile(event)">
                    </div>
                    <div class="form-group">
                        <label for="Username"><strong>@Html.LabelFor(model => model.Username)</strong></label>
                        @Html.TextBoxFor(model => model.Username, new { placeholder = "User Name", htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="Email"><strong>@Html.LabelFor(model => model.Email)</strong></label>
                        @Html.TextBoxFor(model => model.Email, new { placeholder = "Email Id", htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="Password"><strong>@Html.LabelFor(model => model.Password)</strong></label>
                        @Html.PasswordFor(model => model.Password, new { placeholder = "Password", htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                       <label for="ConfirmedPassword"><strong>@Html.LabelFor(model => model.ConfirmedPassword)</strong></label>
                        @Html.PasswordFor(model => model.ConfirmedPassword, new { placeholder = "Password", htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.ConfirmedPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn">Sign Up</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <script>
        function loadFile(event) {
            var image = document.getElementById('imgPreview');
            image.src = URL.createObjectURL(event.target.files[0]);
            image.style.display = 'block';
        }

        function closeModal() {
            window.location.href = '@Url.Action("Login", "User")';
        }
    </script>

</body>
</html>